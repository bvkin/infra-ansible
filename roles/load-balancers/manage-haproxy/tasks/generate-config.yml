---

# Use a 'block' to ensure it all runs on 'localhost'
- block:

  - name: 'Use a unique temporary directory to store the config files pre-assemble'
    command: mktemp -d
    register: tempdir

  - name: 'Store away the temp names'
    set_fact:
      haproxy_temp_dir: '{{ tempdir.stdout }}'

  - name: 'Populate the common config portion for HAproxy'
    template:
      src: "{{ lb_common_template | default('lb_common.j2') }}"
      dest: '{{ haproxy_temp_dir }}/global.cfg'

  - name: 'Configure and Populate LB Frontends'
    template:
      src: "{{ lb_frontend_template | default('lb_frontend.j2') }}"
      dest: '{{ haproxy_temp_dir }}/frontends.cfg'

  - name: 'Configure and Populate LB Backends'
    template:
      src: "{{ lb_backend_template | default('lb_backend.j2') }}"
      dest: '{{ haproxy_temp_dir }}/backend-{{ backend_entry.lb_match_fqdn }}.cfg'
    loop_control:
      loop_var: backend_entry
    loop: "{{ lb_config.lb_entries }}"

  - name: 'Populate the stats page config'
    vars:
      page_config: "{{ lb_config.stats_page }}"
    template:
      src: lb_http_stats.j2
      dest: '{{ haproxy_temp_dir }}/stats.cfg'
    when:
    - lb_config.stats_page is defined
    - lb_config.stats_page.enabled is defined
    - lb_config.stats_page.enabled

  # Delegate the entire block to "localhost"
  delegate_to: localhost
  run_once: True
