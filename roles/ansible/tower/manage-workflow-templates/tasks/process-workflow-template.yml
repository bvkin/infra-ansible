---

- name: "Load up the workflow template"
  uri:
    url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}/api/v2/workflow_job_templates/"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', 'workflow-template.j2') }}"
    body_format: 'json'
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: no
    status_code: 200,201,400
  register: workflow_template_rest_output

- block:
  - set_fact:
      workflow_template_id: "{{ workflow_template_rest_output.json.id }}"

  - name: "Process the workflow nodes"
    include_tasks: process-workflow-node.yml
    with_items:
    - "{{ workflow_template.nodes }}"
    loop_control:
      loop_var: workflow_node

  # Utilize the `rest_get` library routine to ensure REST pagination is handled
  - name: "Obtain the current roles"
    rest_get:
      host_url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}"
      rest_user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
      rest_password: "{{ ansible_tower.admin_password }}"
      api_uri: "/api/v2/roles/"
    register: existing_roles_output

  - name: "Assign the Team(s) Permission(s)"
    vars:
      permissions_object: "teams"
      permissions_value: "{{ team }}"
    include_tasks: set-permissions.yml
    when:
    - workflow_template.permissions is defined
    - workflow_template.permissions.teams is defined
    with_items:
    - "{{ workflow_template.permissions.teams }}"
    loop_control:
      loop_var: team

  - name: "Assign the User(s) Permission(s)"
    vars:
      permissions_object: "users"
      permissions_value: "{{ user }}"
    include_tasks: set-permissions.yml
    when:
    - workflow_template.permissions is defined
    - workflow_template.permissions.users is defined
    with_items:
    - "{{ workflow_template.permissions.users }}"
    loop_control:
      loop_var: user

  when:
  - workflow_template_rest_output.json.id is defined
